#!/bin/tcsh -f
#
# This script is for your convenience.  It's NOT EXACTLY THE SAME as going throught the steps in the grading guidelines.
# It's best that you run through section (C) of the grading guidelines manually so you won't get any grading surprises!
#
# This file should be in the "pa5data" subdirectory of the directory where you have your "pa5" executable.  To run it do:
#     chmod 755 ./pa5data/tmux-pa5-C.txt
#     ./pa5data/tmux-pa5-C.txt
# To switch to use a different pane, please type <Cntrl+b> follwed the up/down/left/right key on your keyboard.
#
# pa5 topology:
#                        +-------+
#                     /--+ 12010 +--------------------------\
#                     |  +-------+                          |
#                     |                                     |
#     +-------+   +---+---+     +-------+   +-------+   +---+---+
#     | 12000 +---+ 12002 +-----+ 12004 +---+ 12006 +---+ 12008 |
#     +-------+   +-------+     +-------+   +-------+   +-------+

setenv SHELL "/bin/tcsh"
set session_name="pa5"
set running=`tmux list-sessions | grep "${session_name}:"`

if ("x$running" != "x") then
    # it's running
    echo "Session '${session_name}' already exists"
else
    # create 4 panes, one at the bottom, two on the left, and one on the right

    # create a tmux session
    tmux new-session -d -s ${session_name} '/bin/rm -f pa5data/*.log pa5data/*.pid; echo -n "(window1) "; \
            script -c "./pa5 pa5data/pa5-12000.ini" script.C00.txt; \
            echo "[ (1) type <Ctrl+d> after server has quit to close this pane ]"; cat'
    # split the current pane vertically 99/1
    tmux split-window -v -p 1
    # split the top pane horizontally 60/40
    tmux split-window -h -t top -p 40 '\
            echo "[                    +-------+                                ]"; \
            echo "[                 /--+ 12010 +--------------------------\     ]"; \
            echo "[                 |  +-------+                          |     ]"; \
            echo "[                 |                                     |     ]"; \
            echo "[ +-------+   +---+---+     +-------+   +-------+   +---+---+ ]"; \
            echo "[ | 12000 +---+ 12002 +-----+ 12004 +---+ 12006 +---+ 12008 | ]"; \
            echo "[ +-------+   +-------+     +-------+   +-------+   +-------+ ]"; \
            echo "[ in all windows, type "\""netgraph"\"" and verify ]"; \
            echo "[ in all windows, type "\""forwarding"\"" and verify ]"; \
            echo "[ (C.1) do the following as quickly as possible to run traceroute in parallel: ]"; \
            echo "[     in 1st window, type "\""traceroute :12008"\"" ]"; \
            echo "[     in 2nd window, type "\""traceroute :12008"\"" ]"; \
            echo "[     in 4th window, type "\""traceroute :12000"\"", should see: ]"; \
            echo "[ in 1st window, should eventually see: ]"; \
            echo "[     1 - :12002, TTL1             ]"; \
            echo "[     2 - :12010, TTL2             ]"; \
            echo "[     3 - :12008, TTL3             ]"; \
            echo "[     :12008 is reached in 3 steps ]"; \
            echo "[ in 2nd window, should eventually see: ]"; \
            echo "[     1 - :12010, TTL4             ]"; \
            echo "[     2 - :12008, TTL5             ]"; \
            echo "[     :12008 is reached in 2 steps ]"; \
            echo "[ in 4th window, should eventually see: ]"; \
            echo "[     1 - :12004, TTL6             ]"; \
            echo "[     2 - :12002, TTL7             ]"; \
            echo "[     3 - :12000, TTL8             ]"; \
            echo "[     :12000 is reached in 3 steps ]"; \
            echo "[ (C.2) in 4th window, type "\""traceroute :12000"\"", wait to see: ]"; \
            echo "[     1 - :12004, TTL8             ]"; \
            echo "[ do the following as quickly as possible: ]"; \
            echo "[   in 3rd window, type "\""quit"\"", :12004 should self-terminate ]"; \
            echo "[   in 1st window, type "\""traceroute :12006"\"" ]"; \
            echo "[ in 4th window should eventually see: ]"; \
            echo "[     2 - :12010, TTL10            ]"; \
            echo "[     3 - :12002, TTL11            ]"; \
            echo "[     4 - :12000, TTL12            ]"; \
            echo "[     :12000 is reached in 4 steps ]"; \
            echo "[ in 1st window, should eventually see: ]"; \
            echo "[     1 - :12002, TTL13            ]"; \
            echo "[     2 - :12010, TTL14            ]"; \
            echo "[     3 - :12008, TTL15            ]"; \
            echo "[     4 - :12006, TTL16            ]"; \
            echo "[     :12006 is reached in 4 steps ]"; \
            echo "[ (C.3) type "\""quit"\"" in all remaining windows ]"; \
            echo "[ type <Ctrl+d> after server has quit to close this pane ]"; cat'
    # split the left pane vertically 33/67
    tmux split-window -v -t 0 -p 50 '\
            sleep 3; echo -n "(window4) "; \
            script -c "./pa5 pa5data/pa5-12006.ini" script.C06.txt; \
            echo "[ (4) type <Ctrl+d> after server has quit to close this pane ]"; cat'
    tmux split-window -v -t 0 -p 33 '\
            sleep 2; echo -n "(window3) "; \
            script -c "./pa5 pa5data/pa5-12004.ini" script.C04.txt; \
            echo "[ (3) type <Ctrl+d> after server has quit to close this pane ]"; cat'
    tmux split-window -v -t 0 -p 50 '\
            sleep 1; echo -n "(window2) "; \
            script -c "./pa5 pa5data/pa5-12002.ini" script.C02.txt; \
            echo "[ (2) type <Ctrl+d> after server has quit to close this pane ]"; cat'
    tmux split-window -v -t 3 -p 33 '\
            sleep 5; echo -n "(window6) "; \
            script -c "./pa5 pa5data/pa5-12010.ini" script.C10.txt; \
            echo "[ (6) type <Ctrl+d> after server has quit to close this pane ]"; cat'
    tmux split-window -v -t 3 -p 50 '\
            sleep 4; echo -n "(window5) "; \
            script -c "./pa5 pa5data/pa5-12008.ini" script.C08.txt; \
            echo "[ (5) type <Ctrl+d> after server has quit to close this pane ]"; cat'

    tmux attach-session -d -t ${session_name}
endif
